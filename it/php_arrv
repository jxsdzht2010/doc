    自己写的一个PHP函数
    在开发过程中，经常遇到下面这样的代码：
    [code]
    $id     = isset($_GET['id']) ? intval($_GET['id']) : 0;
    $page   = isset($_GET['page']) ? intval($_GET['page']) : 1;
    ...
    诸如此类的安全检查代码，没难度，写起来却费事。某天我采用一个通用的办法处理之类操作，写了一个函数ARRV，具体实现很简单，几行代码便可。
    
/**
 * 取$_GET, $_POST的值
 */
function ARRV($arr = array(), $key = '', $v = '') {
    if (!is_array($arr)) {
    	return $v;
    }
    if (!isset($arr[$key])) {
    	return $v;
    }
    return $arr[$key];
}

function GET($key = '', $v = '') {
    return ARRV($_GET, $key, $v);
}

function POST($key = '', $v = '') {
    return ARRV($_POST, $key, $v);
}
    有这几个函数，上面两行代码可以简化为：
    $id     = GET('id', 0);
    $page   = GET('page', 1);
    而且在命名上，GET和$_GET相似，所以不难记住，一个很短的函数可简化许多繁琐的操作。
    下面来说说ARRV这个函数，假如有一个数组
    【ARRV函数】
    $arr = array('a' => 1)
    如果取它不存在的key值，比如 $v = $arr['b']，这样取值是不安全的，可能会导致程序不正常，报NOTICE错误，于是，采用一种安全的取值法：
    $v = isset($arr['b']) ? $arr['b'] : 0;
    当代码中出现很多需要采用类似三元表达式的语句时，就可用一个ARRV函数替代，如：
    $a = isset($arr['a']) ? $arr['a'] : 0;
    $b = isset($arr['b']) ? $arr['b'] : 0;
    $c = isset($arr['c']) ? $arr['c'] : 0;
    $d = isset($arr['d']) ? $arr['d'] : 0;
    用ARRV函数代替之后就简单很多：
    $a = ARRV($arr, 'a', 0);
    $b = ARRV($arr, 'b', 0);
    $c = ARRV($arr, 'c', 0);
    $d = ARRV($arr, 'd', 0);
    可以继续简化：
    foreach(array('a', 'b', 'c', 'd') as $v) {
        $$v = ARRV($arr, $v, 0);
    }
    这样写，冗余代码便少了许多。
    